rub11 <- matrix(c(665,208,2,4),nrow=2,byrow=TRUE)
rub12 <- matrix(c(297,157,1,0),nrow=2,byrow=TRUE)#contain 0
rub_list = list(rub2,rub5, rub6, rub8, rub11)
makeForestPlotForRCTs(rub_list)
{
require("rmeta")
numstrata <- length(mylist)
# make an array "ntrt" of the number of people in the exposed group, in each stratum
# make an array "nctrl" of the number of people in the unexposed group, in each stratum
# make an array "ptrt" of the number of people in the exposed group that have the disease,
# in each stratum
# make an array "pctrl" of the number of people in the unexposed group that have the disease,
# in each stratum
ntrt <- vector()
nctrl <- vector()
ptrt <- vector()
pctrl <- vector()
if (referencerow == 1) { nonreferencerow <- 2 }
else                   { nonreferencerow <- 1 }
for (i in 1:numstrata)
{
mymatrix <- mylist[[i]]
DiseaseUnexposed <- mymatrix[referencerow,1]
ControlUnexposed <- mymatrix[referencerow,2]
totUnexposed <- DiseaseUnexposed + ControlUnexposed
nctrl[i] <- totUnexposed
pctrl[i] <- DiseaseUnexposed
DiseaseExposed <- mymatrix[nonreferencerow,1]
ControlExposed <- mymatrix[nonreferencerow,2]
totExposed <- DiseaseExposed + ControlExposed
ntrt[i] <- totExposed
ptrt[i] <- DiseaseExposed
}
names <- as.character(seq(1,numstrata))
myMH <- meta.MH(ntrt, nctrl, ptrt, pctrl, conf.level=0.95, names=names,statistic="OR")
tabletext<-cbind(c("","Study",myMH$names,NA,"Summary"),
c("Treatment","(antiboby)",ptrt,NA,NA),
c("Treatment","(non-antiboby)",pctrl, NA,NA),
c("Control","(antiboby)",(ntrt-ptrt),NA,NA),
c("Control","(non-antiboby)",(nctrl-pctrl), NA,NA),
c("","OR",format((exp(myMH$logOR)),digits=3),NA,format((exp(myMH$logMH)),digits=3)))
m<- c(NA,NA,exp(myMH$logOR),NA,exp(myMH$logMH))
l<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)-c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
u<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)+c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
forestplot(tabletext,m,l,u,zero=1,is.summary=c(TRUE,TRUE,rep(FALSE,(length(mylist)+1)),TRUE),
col=meta.colors(box="#916cdf",line="#34186f", summary="#ff864c"),
xlab="Odds ratio with 95% confidence interval",
graphwidth = unit(3, "inches"), clip=c(-0.01,5), boxsize = 1)
}
rub1 <- matrix(c(288,141,10,0),nrow=2,byrow=TRUE)#contain 0
rub2 <- matrix(c(1114,552,3,3),nrow=2,byrow=TRUE)
rub3 <- matrix(c(73,74,1,0),nrow=2,byrow=TRUE)#contain 0
rub4 <- matrix(c(1148,189,1,0),nrow=2,byrow=TRUE)#contain 0
rub5 <- matrix(c(289,142,15,11),nrow=2,byrow=TRUE)
rub6 <- matrix(c(1004,352,11,4),nrow=2,byrow=TRUE)
rub7 <- matrix(c(303,106,3,0),nrow=2,byrow=TRUE)#contain 0
rub8 <- matrix(c(2501,859,31,7),nrow=2,byrow=TRUE)
rub9 <- matrix(c(113,108,20,10),nrow=2,byrow=TRUE)#contain 0
rub10 <- matrix(c(10,8,0,0),nrow=2,byrow=TRUE)#contain 0
rub11 <- matrix(c(665,208,2,4),nrow=2,byrow=TRUE)
rub12 <- matrix(c(297,157,1,0),nrow=2,byrow=TRUE)#contain 0
rub_list = list(rub2,rub5, rub6, rub8, rub11)
makeForestPlotForRCTs(rub_list)
makeForestPlotForRCTs <- function(mylist, referencerow=2)
{
require("rmeta")
numstrata <- length(mylist)
# make an array "ntrt" of the number of people in the exposed group, in each stratum
# make an array "nctrl" of the number of people in the unexposed group, in each stratum
# make an array "ptrt" of the number of people in the exposed group that have the disease,
# in each stratum
# make an array "pctrl" of the number of people in the unexposed group that have the disease,
# in each stratum
ntrt <- vector()
nctrl <- vector()
ptrt <- vector()
pctrl <- vector()
if (referencerow == 1) { nonreferencerow <- 2 }
else                   { nonreferencerow <- 1 }
for (i in 1:numstrata)
{
mymatrix <- mylist[[i]]
DiseaseUnexposed <- mymatrix[referencerow,1]
ControlUnexposed <- mymatrix[referencerow,2]
totUnexposed <- DiseaseUnexposed + ControlUnexposed
nctrl[i] <- totUnexposed
pctrl[i] <- DiseaseUnexposed
DiseaseExposed <- mymatrix[nonreferencerow,1]
ControlExposed <- mymatrix[nonreferencerow,2]
totExposed <- DiseaseExposed + ControlExposed
ntrt[i] <- totExposed
ptrt[i] <- DiseaseExposed
}
names <- as.character(seq(1,numstrata))
myMH <- meta.MH(ntrt, nctrl, ptrt, pctrl, conf.level=0.95, names=names,statistic="OR")
tabletext<-cbind(c("","Study",myMH$names,NA,"Summary"),
c("Treatment","(antiboby)",ptrt,NA,NA),
c("Treatment","(non-antiboby)",pctrl, NA,NA),
c("Control","(antiboby)",(ntrt-ptrt),NA,NA),
c("Control","(non-antiboby)",(nctrl-pctrl), NA,NA),
c("","OR",format((exp(myMH$logOR)),digits=3),NA,format((exp(myMH$logMH)),digits=3)))
m<- c(NA,NA,exp(myMH$logOR),NA,exp(myMH$logMH))
l<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)-c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
u<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)+c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
forestplot(tabletext,m,l,u,zero=1,is.summary=c(TRUE,TRUE,rep(FALSE,(length(mylist)+1)),TRUE),
col=meta.colors(box="#916cdf",line="#34186f", summary="#ff864c"),
xlab="Odds ratio with 95% confidence interval",
graphwidth = unit(3, "inches"), clip=c(-0.01,5), boxsize = 1)
}
rub1 <- matrix(c(288,141,10,0),nrow=2,byrow=TRUE)#contain 0
rub2 <- matrix(c(1114,552,3,3),nrow=2,byrow=TRUE)
rub3 <- matrix(c(73,74,1,0),nrow=2,byrow=TRUE)#contain 0
rub4 <- matrix(c(1148,189,1,0),nrow=2,byrow=TRUE)#contain 0
rub5 <- matrix(c(289,142,15,11),nrow=2,byrow=TRUE)
rub6 <- matrix(c(1004,352,11,4),nrow=2,byrow=TRUE)
rub7 <- matrix(c(303,106,3,0),nrow=2,byrow=TRUE)#contain 0
rub8 <- matrix(c(2501,859,31,7),nrow=2,byrow=TRUE)
rub9 <- matrix(c(113,108,20,10),nrow=2,byrow=TRUE)#contain 0
rub10 <- matrix(c(10,8,0,0),nrow=2,byrow=TRUE)#contain 0
rub11 <- matrix(c(665,208,2,4),nrow=2,byrow=TRUE)
rub12 <- matrix(c(297,157,1,0),nrow=2,byrow=TRUE)#contain 0
rub_list = list(rub2,rub5, rub6, rub8, rub11)
makeForestPlotForRCTs(rub_list)
makeForestPlotForRCTs <- function(mylist, referencerow=2)
{
require("rmeta")
numstrata <- length(mylist)
# make an array "ntrt" of the number of people in the exposed group, in each stratum
# make an array "nctrl" of the number of people in the unexposed group, in each stratum
# make an array "ptrt" of the number of people in the exposed group that have the disease,
# in each stratum
# make an array "pctrl" of the number of people in the unexposed group that have the disease,
# in each stratum
ntrt <- vector()
nctrl <- vector()
ptrt <- vector()
pctrl <- vector()
if (referencerow == 1) { nonreferencerow <- 2 }
else                   { nonreferencerow <- 1 }
for (i in 1:numstrata)
{
mymatrix <- mylist[[i]]
DiseaseUnexposed <- mymatrix[referencerow,1]
ControlUnexposed <- mymatrix[referencerow,2]
totUnexposed <- DiseaseUnexposed + ControlUnexposed
nctrl[i] <- totUnexposed
pctrl[i] <- DiseaseUnexposed
DiseaseExposed <- mymatrix[nonreferencerow,1]
ControlExposed <- mymatrix[nonreferencerow,2]
totExposed <- DiseaseExposed + ControlExposed
ntrt[i] <- totExposed
ptrt[i] <- DiseaseExposed
}
names <- as.character(seq(1,numstrata))
myMH <- meta.MH(ntrt, nctrl, ptrt, pctrl, conf.level=0.95, names=names,statistic="OR")
tabletext<-cbind(c("","Study",myMH$names,NA,"Summary"),
c("Treatment","(antiboby)",ptrt,NA,NA),
c("Treatment","(non-antiboby)",pctrl, NA,NA),
c("Control","(antiboby)",(ntrt-ptrt),NA,NA),
c("Control","(non-antiboby)",(nctrl-pctrl), NA,NA),
c("","OR",format((exp(myMH$logOR)),digits=3),NA,format((exp(myMH$logMH)),digits=3)))
m<- c(NA,NA,exp(myMH$logOR),NA,exp(myMH$logMH))
l<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)-c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
u<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)+c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
forestplot(tabletext,m,l,u,zero=1,is.summary=c(TRUE,TRUE,rep(FALSE,(length(mylist)+1)),TRUE),
col=meta.colors(box="#916cdf",line="#34186f", summary="#ff864c"),
xlab="Odds ratio with 95% confidence interval",
graphwidth = unit(2, "inches"), clip=c(-0.01,6), boxsize = 1)
}
rub1 <- matrix(c(288,141,10,0),nrow=2,byrow=TRUE)#contain 0
rub2 <- matrix(c(1114,552,3,3),nrow=2,byrow=TRUE)
rub3 <- matrix(c(73,74,1,0),nrow=2,byrow=TRUE)#contain 0
rub4 <- matrix(c(1148,189,1,0),nrow=2,byrow=TRUE)#contain 0
rub5 <- matrix(c(289,142,15,11),nrow=2,byrow=TRUE)
rub6 <- matrix(c(1004,352,11,4),nrow=2,byrow=TRUE)
rub7 <- matrix(c(303,106,3,0),nrow=2,byrow=TRUE)#contain 0
rub8 <- matrix(c(2501,859,31,7),nrow=2,byrow=TRUE)
rub9 <- matrix(c(113,108,20,10),nrow=2,byrow=TRUE)#contain 0
rub10 <- matrix(c(10,8,0,0),nrow=2,byrow=TRUE)#contain 0
rub11 <- matrix(c(665,208,2,4),nrow=2,byrow=TRUE)
rub12 <- matrix(c(297,157,1,0),nrow=2,byrow=TRUE)#contain 0
rub_list = list(rub2,rub5, rub6, rub8, rub11)
makeForestPlotForRCTs(rub_list)
{
require("rmeta")
numstrata <- length(mylist)
# make an array "ntrt" of the number of people in the exposed group, in each stratum
# make an array "nctrl" of the number of people in the unexposed group, in each stratum
# make an array "ptrt" of the number of people in the exposed group that have the disease,
# in each stratum
# make an array "pctrl" of the number of people in the unexposed group that have the disease,
# in each stratum
ntrt <- vector()
nctrl <- vector()
ptrt <- vector()
pctrl <- vector()
if (referencerow == 1) { nonreferencerow <- 2 }
else                   { nonreferencerow <- 1 }
for (i in 1:numstrata)
{
mymatrix <- mylist[[i]]
DiseaseUnexposed <- mymatrix[referencerow,1]
ControlUnexposed <- mymatrix[referencerow,2]
totUnexposed <- DiseaseUnexposed + ControlUnexposed
nctrl[i] <- totUnexposed
pctrl[i] <- DiseaseUnexposed
DiseaseExposed <- mymatrix[nonreferencerow,1]
ControlExposed <- mymatrix[nonreferencerow,2]
totExposed <- DiseaseExposed + ControlExposed
ntrt[i] <- totExposed
ptrt[i] <- DiseaseExposed
}
names <- as.character(seq(1,numstrata))
myMH <- meta.MH(ntrt, nctrl, ptrt, pctrl, conf.level=0.95, names=names,statistic="OR")
tabletext<-cbind(c("","Study",myMH$names,NA,"Summary"),
c("Treatment","(antiboby)",ptrt,NA,NA),
c("Treatment","(non-antiboby)",pctrl, NA,NA),
c("Control","(antiboby)",(ntrt-ptrt),NA,NA),
c("Control","(non-antiboby)",(nctrl-pctrl), NA,NA),
c("","OR",format((exp(myMH$logOR)),digits=3),NA,format((exp(myMH$logMH)),digits=3)))
m<- c(NA,NA,exp(myMH$logOR),NA,exp(myMH$logMH))
l<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)-c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
u<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)+c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
forestplot(tabletext,m,l,u,zero=1,is.summary=c(TRUE,TRUE,rep(FALSE,(length(mylist)+1)),TRUE),
col=meta.colors(box="#916cdf",line="#34186f", summary="#ff864c"),
xlab="Odds ratio with 95% confidence interval",
graphwidth = unit(2.7, "inches"), clip=c(-0.01,7), boxsize = 1)
}
rub1 <- matrix(c(288,141,10,0),nrow=2,byrow=TRUE)#contain 0
rub2 <- matrix(c(1114,552,3,3),nrow=2,byrow=TRUE)
rub3 <- matrix(c(73,74,1,0),nrow=2,byrow=TRUE)#contain 0
rub4 <- matrix(c(1148,189,1,0),nrow=2,byrow=TRUE)#contain 0
rub5 <- matrix(c(289,142,15,11),nrow=2,byrow=TRUE)
rub6 <- matrix(c(1004,352,11,4),nrow=2,byrow=TRUE)
rub7 <- matrix(c(303,106,3,0),nrow=2,byrow=TRUE)#contain 0
rub8 <- matrix(c(2501,859,31,7),nrow=2,byrow=TRUE)
rub9 <- matrix(c(113,108,20,10),nrow=2,byrow=TRUE)#contain 0
rub10 <- matrix(c(10,8,0,0),nrow=2,byrow=TRUE)#contain 0
rub11 <- matrix(c(665,208,2,4),nrow=2,byrow=TRUE)
rub12 <- matrix(c(297,157,1,0),nrow=2,byrow=TRUE)#contain 0
rub_list = list(rub2,rub5, rub6, rub8, rub11)
makeForestPlotForRCTs(rub_list)
makeForestPlotForRCTs <- function(mylist, referencerow=2)
{
require("rmeta")
numstrata <- length(mylist)
# make an array "ntrt" of the number of people in the exposed group, in each stratum
# make an array "nctrl" of the number of people in the unexposed group, in each stratum
# make an array "ptrt" of the number of people in the exposed group that have the disease,
# in each stratum
# make an array "pctrl" of the number of people in the unexposed group that have the disease,
# in each stratum
ntrt <- vector()
nctrl <- vector()
ptrt <- vector()
pctrl <- vector()
if (referencerow == 1) { nonreferencerow <- 2 }
else                   { nonreferencerow <- 1 }
for (i in 1:numstrata)
{
mymatrix <- mylist[[i]]
DiseaseUnexposed <- mymatrix[referencerow,1]
ControlUnexposed <- mymatrix[referencerow,2]
totUnexposed <- DiseaseUnexposed + ControlUnexposed
nctrl[i] <- totUnexposed
pctrl[i] <- DiseaseUnexposed
DiseaseExposed <- mymatrix[nonreferencerow,1]
ControlExposed <- mymatrix[nonreferencerow,2]
totExposed <- DiseaseExposed + ControlExposed
ntrt[i] <- totExposed
ptrt[i] <- DiseaseExposed
}
names <- as.character(seq(1,numstrata))
myMH <- meta.MH(ntrt, nctrl, ptrt, pctrl, conf.level=0.95, names=names,statistic="OR")
tabletext<-cbind(c("","Study",myMH$names,NA,"Summary"),
c("Treatment","(antiboby)",ptrt,NA,NA),
c("Treatment","(non-antiboby)",pctrl, NA,NA),
c("Control","(antiboby)",(ntrt-ptrt),NA,NA),
c("Control","(non-antiboby)",(nctrl-pctrl), NA,NA),
c("","OR",format((exp(myMH$logOR)),digits=3),NA,format((exp(myMH$logMH)),digits=3)))
m<- c(NA,NA,exp(myMH$logOR),NA,exp(myMH$logMH))
l<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)-c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
u<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)+c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
forestplot(tabletext,m,l,u,zero=1,is.summary=c(TRUE,TRUE,rep(FALSE,(length(mylist)+1)),TRUE),
col=meta.colors(box="#916cdf",line="#34186f", summary="#ff864c"),
xlab="Odds ratio with 95% confidence interval",
graphwidth = unit(2.7, "inches"), clip=c(-0.01,7), boxsize = 1)
}
rub1 <- matrix(c(288,141,10,0),nrow=2,byrow=TRUE)#contain 0
rub2 <- matrix(c(1114,552,3,3),nrow=2,byrow=TRUE)
rub3 <- matrix(c(73,74,1,0),nrow=2,byrow=TRUE)#contain 0
rub4 <- matrix(c(1148,189,1,0),nrow=2,byrow=TRUE)#contain 0
rub5 <- matrix(c(289,142,15,11),nrow=2,byrow=TRUE)
rub6 <- matrix(c(1004,352,11,4),nrow=2,byrow=TRUE)
rub7 <- matrix(c(303,106,3,0),nrow=2,byrow=TRUE)#contain 0
rub8 <- matrix(c(2501,859,31,7),nrow=2,byrow=TRUE)
rub9 <- matrix(c(113,108,20,10),nrow=2,byrow=TRUE)#contain 0
rub10 <- matrix(c(10,8,0,0),nrow=2,byrow=TRUE)#contain 0
rub11 <- matrix(c(665,208,2,4),nrow=2,byrow=TRUE)
rub12 <- matrix(c(297,157,1,0),nrow=2,byrow=TRUE)#contain 0
rub_list = list(rub2,rub5, rub6, rub8, rub11)
makeForestPlotForRCTs(rub_list)
runApp()
makeForestPlotForRCTs(avq_list)
runApp()
makeForestPlotForRCTs <- function(mylist, referencerow=2)
{
require("rmeta")
numstrata <- length(mylist)
# make an array "ntrt" of the number of people in the exposed group, in each stratum
# make an array "nctrl" of the number of people in the unexposed group, in each stratum
# make an array "ptrt" of the number of people in the exposed group that have the disease,
# in each stratum
# make an array "pctrl" of the number of people in the unexposed group that have the disease,
# in each stratum
ntrt <- vector()
nctrl <- vector()
ptrt <- vector()
pctrl <- vector()
if (referencerow == 1) { nonreferencerow <- 2 }
else                   { nonreferencerow <- 1 }
for (i in 1:numstrata)
{
mymatrix <- mylist[[i]]
DiseaseUnexposed <- mymatrix[referencerow,1]
ControlUnexposed <- mymatrix[referencerow,2]
totUnexposed <- DiseaseUnexposed + ControlUnexposed
nctrl[i] <- totUnexposed
pctrl[i] <- DiseaseUnexposed
DiseaseExposed <- mymatrix[nonreferencerow,1]
ControlExposed <- mymatrix[nonreferencerow,2]
totExposed <- DiseaseExposed + ControlExposed
ntrt[i] <- totExposed
ptrt[i] <- DiseaseExposed
}
names <- as.character(seq(1,numstrata))
myMH <- meta.MH(ntrt, nctrl, ptrt, pctrl, conf.level=0.95, names=names,statistic="OR")
tabletext<-cbind(c("","Study",myMH$names,NA,"Summary"),
c("Treatment","(antiboby)",ptrt,NA,NA),
c("Treatment","(non-antiboby)",pctrl, NA,NA),
c("Control","(antiboby)",(ntrt-ptrt),NA,NA),
c("Control","(non-antiboby)",(nctrl-pctrl), NA,NA),
c("","OR",format((exp(myMH$logOR)),digits=3),NA,format((exp(myMH$logMH)),digits=3)))
m<- c(NA,NA,exp(myMH$logOR),NA,exp(myMH$logMH))
l<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)-c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
u<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)+c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
forestplot(tabletext,m,l,u,zero=1,is.summary=c(TRUE,TRUE,rep(FALSE,(length(mylist)+1)),TRUE),
col=meta.colors(box="#916cdf",line="#34186f", summary="#ff864c"),
xlab="Odds ratio with 95% confidence interval",
graphwidth = unit(4, "inches"), boxsize = 1)
}
rub1 <- matrix(c(288,141,10,0),nrow=2,byrow=TRUE)#contain 0
rub2 <- matrix(c(1114,552,3,3),nrow=2,byrow=TRUE)
rub3 <- matrix(c(73,74,1,0),nrow=2,byrow=TRUE)#contain 0
rub4 <- matrix(c(1148,189,1,0),nrow=2,byrow=TRUE)#contain 0
rub5 <- matrix(c(289,142,15,11),nrow=2,byrow=TRUE)
rub6 <- matrix(c(1004,352,11,4),nrow=2,byrow=TRUE)
rub7 <- matrix(c(303,106,3,0),nrow=2,byrow=TRUE)#contain 0
rub8 <- matrix(c(2501,859,31,7),nrow=2,byrow=TRUE)
rub9 <- matrix(c(113,108,20,10),nrow=2,byrow=TRUE)#contain 0
rub10 <- matrix(c(10,8,0,0),nrow=2,byrow=TRUE)#contain 0
rub11 <- matrix(c(665,208,2,4),nrow=2,byrow=TRUE)
rub12 <- matrix(c(297,157,1,0),nrow=2,byrow=TRUE)#contain 0
rub_list = list(rub2,rub5, rub6, rub8, rub11)
makeForestPlotForRCTs(avq_list)
amvq1 <- matrix(c(6,10,45,42),nrow=2,byrow=TRUE)
amvq2 <- matrix(c(18,8,71,63),nrow=2,byrow=TRUE)
amvq3 <- matrix(c(11,14,43,35),nrow=2,byrow=TRUE)
amvq4 <- matrix(c(1,2,17,17),nrow=2,byrow=TRUE)
amvq5 <- matrix(c(10,12,73,69),nrow=2,byrow=TRUE)
amvq6 <- matrix(c(59,62,229,226),nrow=2,byrow=TRUE)
amvq7 <- matrix(c(3,2,35,37),nrow=2,byrow=TRUE)
amvq_list = list(amvq1, amvq2, amvq3, amvq4, amvq5, amvq6, amvq7)
makeForestPlotForRCTs(amvq_list)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
print("\u2265")
runApp()
runApp()
runApp()
makeForestPlotForRCTs <- function(mylist, referencerow=2)
{
require("rmeta")
numstrata <- length(mylist)
# make an array "ntrt" of the number of people in the exposed group, in each stratum
# make an array "nctrl" of the number of people in the unexposed group, in each stratum
# make an array "ptrt" of the number of people in the exposed group that have the disease,
# in each stratum
# make an array "pctrl" of the number of people in the unexposed group that have the disease,
# in each stratum
ntrt <- vector()
nctrl <- vector()
ptrt <- vector()
pctrl <- vector()
if (referencerow == 1) { nonreferencerow <- 2 }
else                   { nonreferencerow <- 1 }
for (i in 1:numstrata)
{
mymatrix <- mylist[[i]]
DiseaseUnexposed <- mymatrix[referencerow,1]
ControlUnexposed <- mymatrix[referencerow,2]
totUnexposed <- DiseaseUnexposed + ControlUnexposed
nctrl[i] <- totUnexposed
pctrl[i] <- DiseaseUnexposed
DiseaseExposed <- mymatrix[nonreferencerow,1]
ControlExposed <- mymatrix[nonreferencerow,2]
totExposed <- DiseaseExposed + ControlExposed
ntrt[i] <- totExposed
ptrt[i] <- DiseaseExposed
}
names <- as.character(seq(1,numstrata))
myMH <- meta.MH(ntrt, nctrl, ptrt, pctrl, conf.level=0.95, names=names,statistic="OR")
tabletext<-cbind(c("","Study",myMH$names,NA,"Summary"),
c("Treatment","(death)",ptrt,NA,NA),
c("Treatment","(survival)",pctrl, NA,NA),
c("Control","(death)",(ntrt-ptrt),NA,NA),
c("Control","(survival)",(nctrl-pctrl), NA,NA),
c("","OR",format((exp(myMH$logOR)),digits=3),NA,format((exp(myMH$logMH)),digits=3)))
m<- c(NA,NA,exp(myMH$logOR),NA,exp(myMH$logMH))
l<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)-c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
u<- exp(c(NA,NA,myMH$logOR,NA,myMH$logMH)+c(NA,NA,myMH$selogOR,NA,myMH$selogMH)*1.96)
forestplot(tabletext,m,l,u,zero=1,is.summary=c(TRUE,TRUE,rep(FALSE,(length(mylist)+1)),TRUE),
col=meta.colors(box="#916cdf",line="#34186f", summary="#ff864c"),
xlab="Odds ratio with 95% confidence interval",
graphwidth = unit(4, "inches"), boxsize = 1)
}
amvq1 <- matrix(c(6,10,45,42),nrow=2,byrow=TRUE)
amvq2 <- matrix(c(18,8,71,63),nrow=2,byrow=TRUE)
amvq3 <- matrix(c(11,14,43,35),nrow=2,byrow=TRUE)
amvq4 <- matrix(c(1,2,17,17),nrow=2,byrow=TRUE)
amvq5 <- matrix(c(10,12,73,69),nrow=2,byrow=TRUE)
amvq6 <- matrix(c(59,62,229,226),nrow=2,byrow=TRUE)
amvq7 <- matrix(c(3,2,35,37),nrow=2,byrow=TRUE)
amvq_list = list(amvq1, amvq2, amvq3, amvq4, amvq5, amvq6, amvq7)
makeForestPlotForRCTs(amvq_list)
for (i in 1:numstrata)
runApp()
runApp()
runApp()
runApp()
?selectInput
runApp()
?div
runApp()
runApp()
runApp()
shinyApp(
ui = fluidPage(
div(style = "font-size:20px;",
selectInput(inputId = "inId", label = div(style = "font-size:80px", "Different Font Size..."),
choices = c("...From This", "Test")
)
)
),
server = function(input, output) {
}
)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('C:/Users/Jingjun Wang/Desktop/1.R')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
?dropdownButton
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
output$restable <- renderTable({
myvals<- c(input$slider1, input$slider2, 100-input$slider1-input$slider2)
data.frame(Names=c("Slider 1", "Slider 2", "Slider 3"),
Values=myvals)
})
runApp('C:/Users/Jingjun Wang/Desktop/1.R')
runApp('C:/Users/Jingjun Wang/Desktop/1_1.R')
runApp('C:/Users/Jingjun Wang/Desktop/1.R')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('C:/Users/Jingjun Wang/Desktop/1.R')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
runApp('~/ShinyApps/New_Venn_Diagrams')
shiny::runApp('~/ShinyApps/New_Venn_Diagrams')
runApp()
runApp('~/ShinyApps/New_Venn_Diagrams')
